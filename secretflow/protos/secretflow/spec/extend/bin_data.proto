// Copyright 2023 Ant Group Co., Ltd.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//   http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

syntax = "proto3";

package secretflow.spec.extend;

option java_package = "org.secretflow.spec.extend";

// bin level public info
message Bin {
  // if both left bound and right bound are 0, indicates NaN value bins.
  // only effective if not category
  float left_bound = 1;
  float right_bound = 2;

  // note bin iv is hidden for security consideration
  float filling_value = 4;
  // note bad rate or positive count is hidden for security consideration
  uint64 total_count = 5;
  // mark
  // consecutive bins with mark will be merged into one
  // this is the only field that can be modified by front end
  bool mark_for_merge = 6;
}

message VariableBins {
  // feature level public info
  string feature_name = 1;
  string feature_type = 2;
  int32 valid_bin_count = 3;
  // for non-woe binning method, leave this to 0 is fine.
  float iv = 4;
  repeated Bin valid_bins = 5;
  // use single bin for else bin
  Bin else_bin = 6;
  string party_name = 7;
  // indicate if the binning method is woe. If true, filling_value = bin woe.
  bool is_woe = 8;
}

message Bins {
  repeated VariableBins variable_bins = 1;
  string model_hash = 2;
}
